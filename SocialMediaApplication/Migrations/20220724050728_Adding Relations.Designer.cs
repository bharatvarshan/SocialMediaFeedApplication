// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SocialMediaApplication.DbContexts;

#nullable disable

namespace SocialMediaApplication.Migrations
{
    [DbContext(typeof(SocialMediaDbContext))]
    [Migration("20220724050728_Adding Relations")]
    partial class AddingRelations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SocialMediaApplication.Models.Comments", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Comment")
                        .HasColumnType("int");

                    b.Property<int?>("FeedId")
                        .HasColumnType("int");

                    b.HasKey("CommentId");

                    b.HasIndex("FeedId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("SocialMediaApplication.Models.Feed", b =>
                {
                    b.Property<int>("FeedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FeedBody")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("FeedId");

                    b.HasIndex("UserId");

                    b.ToTable("Feeds");
                });

            modelBuilder.Entity("SocialMediaApplication.Models.Likes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("FeedId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FeedId");

                    b.ToTable("Likes");
                });

            modelBuilder.Entity("SocialMediaApplication.Models.TaggedUsers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("FeedId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FeedId");

                    b.ToTable("TaggedUsers");
                });

            modelBuilder.Entity("SocialMediaApplication.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SocialMediaApplication.Models.Comments", b =>
                {
                    b.HasOne("SocialMediaApplication.Models.Feed", null)
                        .WithMany("Comments")
                        .HasForeignKey("FeedId");
                });

            modelBuilder.Entity("SocialMediaApplication.Models.Feed", b =>
                {
                    b.HasOne("SocialMediaApplication.Models.User", null)
                        .WithMany("Posts")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("SocialMediaApplication.Models.Likes", b =>
                {
                    b.HasOne("SocialMediaApplication.Models.Feed", null)
                        .WithMany("LikedById")
                        .HasForeignKey("FeedId");
                });

            modelBuilder.Entity("SocialMediaApplication.Models.TaggedUsers", b =>
                {
                    b.HasOne("SocialMediaApplication.Models.Feed", null)
                        .WithMany("TaggedUsersId")
                        .HasForeignKey("FeedId");
                });

            modelBuilder.Entity("SocialMediaApplication.Models.Feed", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("LikedById");

                    b.Navigation("TaggedUsersId");
                });

            modelBuilder.Entity("SocialMediaApplication.Models.User", b =>
                {
                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
